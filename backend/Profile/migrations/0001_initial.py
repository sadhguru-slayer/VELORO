# Generated by Django 5.1.6 on 2025-03-23 17:03

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=10)),
                ('address_type', models.CharField(choices=[('registered', 'Registered'), ('billing', 'Billing'), ('shipping', 'Shipping')], default='registered', max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=20)),
                ('ifsc_code', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(regex='^[A-Z]{4}0[A-Z0-9]{6}$')])),
                ('account_holder_name', models.CharField(max_length=255)),
                ('branch_name', models.CharField(blank=True, max_length=255, null=True)),
                ('swift_code', models.CharField(blank=True, max_length=11, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('primary', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('issuing_organization', models.CharField(max_length=255)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('credential_id', models.CharField(blank=True, max_length=100, null=True)),
                ('credential_url', models.URLField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Certification',
                'verbose_name_plural': 'Certifications',
            },
        ),
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('registration_number', models.CharField(max_length=50)),
                ('registration_date', models.DateField()),
                ('company_type', models.CharField(max_length=50)),
                ('industry', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True, null=True)),
                ('gst_number', models.CharField(blank=True, max_length=15, null=True)),
                ('pan_number', models.CharField(max_length=10)),
                ('annual_turnover', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('employee_count', models.IntegerField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=20)),
                ('duration', models.IntegerField(help_text='Duration in years')),
                ('description', models.TextField(blank=True, null=True)),
                ('degree_level', models.CharField(choices=[('certificate', 'Certificate'), ('diploma', 'Diploma'), ('bachelor', 'Bachelor'), ('master', 'Master'), ('doctorate', 'Doctorate')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('head_of_department', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=10, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('additional_info', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('feedback', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_reply', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FreelancerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='cover_photos/')),
                ('bio', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('experience_years', models.FloatField(blank=True, null=True)),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('busy', 'Busy'), ('not_available', 'Not Available')], default='available', max_length=20)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preferred_project_duration', models.CharField(blank=True, max_length=50, null=True)),
                ('preferred_project_type', models.CharField(blank=True, max_length=50, null=True)),
                ('work_hours_per_week', models.IntegerField(blank=True, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('identity_verified', models.BooleanField(default=False)),
                ('skills_verified', models.BooleanField(default=False)),
                ('total_projects_completed', models.PositiveIntegerField(default=0)),
                ('current_active_projects', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('success_rate', models.FloatField(default=0)),
                ('on_time_completion_rate', models.FloatField(default=0)),
                ('response_time_avg', models.DurationField(blank=True, null=True)),
                ('is_talentrise', models.BooleanField(default=False)),
                ('student_id', models.CharField(blank=True, max_length=50, null=True)),
                ('course_details', models.JSONField(blank=True, null=True)),
                ('graduation_year', models.IntegerField(blank=True, null=True)),
                ('profile_status', models.CharField(choices=[('incomplete', 'Incomplete'), ('pending_verification', 'Pending Verification'), ('active', 'Active'), ('suspended', 'Suspended'), ('blocked', 'Blocked')], default='incomplete', max_length=20)),
                ('profile_completion_percentage', models.IntegerField(default=0)),
                ('account_tier', models.CharField(default='basic', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(default=django.utils.timezone.now)),
                ('current_semester', models.IntegerField(blank=True, null=True)),
                ('enrollment_year', models.IntegerField(blank=True, null=True)),
                ('academic_status', models.CharField(blank=True, choices=[('active', 'Active'), ('graduated', 'Graduated'), ('on_break', 'On Break'), ('dropped', 'Dropped')], max_length=20, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('academic_achievements', models.JSONField(blank=True, null=True)),
                ('research_publications', models.JSONField(blank=True, null=True)),
                ('specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('id_verified', models.BooleanField(default=False)),
                ('two_factor_enabled', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Freelancer Profile',
                'verbose_name_plural': 'Freelancer Profiles',
            },
        ),
        migrations.CreateModel(
            name='FreelancerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(choices=[('university', 'University'), ('college', 'College'), ('institute', 'Institute'), ('school', 'School')], max_length=50)),
                ('location', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True, null=True)),
                ('accreditation', models.CharField(blank=True, max_length=255, null=True)),
                ('ranking', models.IntegerField(blank=True, null=True)),
                ('established_year', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='institution_logos/')),
                ('verified', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Institution',
                'verbose_name_plural': 'Institutions',
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('project_url', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='portfolio/')),
                ('technologies_used', models.JSONField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('verified', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Portfolio Item',
                'verbose_name_plural': 'Portfolio Items',
            },
        ),
        migrations.CreateModel(
            name='VerificationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('id_proof', 'ID Proof'), ('address_proof', 'Address Proof'), ('pan_card', 'PAN Card'), ('gst_certificate', 'GST Certificate'), ('company_registration', 'Company Registration'), ('bank_statement', 'Bank Statement'), ('professional_certificate', 'Professional Certificate')], max_length=50)),
                ('document_number', models.CharField(max_length=50)),
                ('document_file', models.ImageField(max_length=255, upload_to='verification_docs/')),
                ('verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='cover_photos/')),
                ('bio', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('primary_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('secondary_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('alternate_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('project_preferences', models.JSONField(blank=True, null=True)),
                ('preferred_payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('budget_range', models.CharField(blank=True, max_length=50, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('identity_verified', models.BooleanField(default=False)),
                ('last_verification_date', models.DateTimeField(blank=True, null=True)),
                ('terms_accepted', models.BooleanField(default=False)),
                ('privacy_policy_accepted', models.BooleanField(default=False)),
                ('terms_acceptance_date', models.DateTimeField(blank=True, null=True)),
                ('legal_agreements', models.JSONField(blank=True, null=True)),
                ('total_projects_posted', models.PositiveIntegerField(default=0)),
                ('successful_projects', models.PositiveIntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('response_rate', models.FloatField(default=0)),
                ('payment_reliability_score', models.IntegerField(default=0)),
                ('profile_status', models.CharField(choices=[('incomplete', 'Incomplete'), ('pending_verification', 'Pending Verification'), ('active', 'Active'), ('suspended', 'Suspended'), ('blocked', 'Blocked')], default='incomplete', max_length=20)),
                ('profile_completion_percentage', models.IntegerField(default=0)),
                ('account_tier', models.CharField(default='basic', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(default=django.utils.timezone.now)),
                ('id_verified', models.BooleanField(default=False)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('addresses', models.ManyToManyField(blank=True, related_name='client_addresses', to='Profile.address')),
                ('bank_details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_bank', to='Profile.bankdetails')),
            ],
            options={
                'verbose_name': 'Client Profile',
                'verbose_name_plural': 'Client Profiles',
            },
        ),
    ]
