# Generated by Django 5.1.4 on 2025-02-20 08:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('feedback', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_reply', models.BooleanField(default=False)),
                ('from_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('parent_feedback', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='Profile.feedback')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
                ('to_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreelancerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_client', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
                ('to_freelancer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_freelancer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreelancerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('dob', models.DateField(blank=True, null=True)),
                ('bio', models.CharField(max_length=500, null=True)),
                ('description', models.TextField(null=True)),
                ('bank_name', models.CharField(max_length=255)),
                ('bank_account_number', models.CharField(max_length=20)),
                ('bank_ifsc', models.CharField(max_length=15)),
                ('card_number', models.CharField(max_length=200, null=True)),
                ('expiry_date', models.CharField(blank=True, max_length=300, null=True)),
                ('cvv', models.CharField(max_length=200, null=True)),
                ('bank_verified', models.BooleanField(default=False)),
                ('id_proof', models.ImageField(blank=True, null=True, upload_to='id_proofs/')),
                ('id_verified', models.BooleanField(default=False)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('company_registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_completed_tasks', models.PositiveIntegerField(default=0)),
                ('total_tasks_assigned', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('portfolio_url', models.URLField(blank=True, null=True)),
                ('portfolio_description', models.TextField(blank=True, null=True)),
                ('honesty_score', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.category')),
                ('skills', models.ManyToManyField(blank=True, related_name='freelancers', to='core.skill')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='freelancer_profile', to=settings.AUTH_USER_MODEL)),
                ('payment_history', models.ManyToManyField(blank=True, related_name='freelancer_profiles', to='Profile.paymenthistory')),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('dob', models.DateField(blank=True, null=True)),
                ('bio', models.CharField(max_length=500, null=True)),
                ('description', models.TextField(null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_ifsc', models.CharField(blank=True, max_length=15, null=True)),
                ('bank_verified', models.BooleanField(default=False)),
                ('id_proof', models.ImageField(blank=True, null=True, upload_to='id_proofs/')),
                ('id_verified', models.BooleanField(default=False)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('company_registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('successful_projects', models.PositiveIntegerField(default=0)),
                ('all_projects_posted', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('honesty_score', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
                ('payment_history', models.ManyToManyField(blank=True, related_name='client_profiles', to='Profile.paymenthistory')),
            ],
        ),
    ]
